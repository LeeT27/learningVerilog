$date
	Thu Sep 25 20:53:46 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top_module_tb $end
$var wire 9 ! y [8:0] $end
$var reg 8 " a [7:0] $end
$var reg 8 # b [7:0] $end
$scope module uut $end
$var wire 8 $ a [7:0] $end
$var wire 8 % b [7:0] $end
$var wire 9 & y [8:0] $end
$var wire 9 ' cin [8:0] $end
$scope begin loop[0] $end
$var parameter 2 ( i $end
$scope module fa $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 + cin $end
$var wire 1 , cout $end
$var wire 1 - s $end
$upscope $end
$upscope $end
$scope begin loop[1] $end
$var parameter 2 . i $end
$scope module fa $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 cin $end
$var wire 1 2 cout $end
$var wire 1 3 s $end
$upscope $end
$upscope $end
$scope begin loop[2] $end
$var parameter 3 4 i $end
$scope module fa $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 cin $end
$var wire 1 8 cout $end
$var wire 1 9 s $end
$upscope $end
$upscope $end
$scope begin loop[3] $end
$var parameter 3 : i $end
$scope module fa $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = cin $end
$var wire 1 > cout $end
$var wire 1 ? s $end
$upscope $end
$upscope $end
$scope begin loop[4] $end
$var parameter 4 @ i $end
$scope module fa $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C cin $end
$var wire 1 D cout $end
$var wire 1 E s $end
$upscope $end
$upscope $end
$scope begin loop[5] $end
$var parameter 4 F i $end
$scope module fa $end
$var wire 1 G a $end
$var wire 1 H b $end
$var wire 1 I cin $end
$var wire 1 J cout $end
$var wire 1 K s $end
$upscope $end
$upscope $end
$scope begin loop[6] $end
$var parameter 4 L i $end
$scope module fa $end
$var wire 1 M a $end
$var wire 1 N b $end
$var wire 1 O cin $end
$var wire 1 P cout $end
$var wire 1 Q s $end
$upscope $end
$upscope $end
$scope begin loop[7] $end
$var parameter 4 R i $end
$scope module fa $end
$var wire 1 S a $end
$var wire 1 T b $end
$var wire 1 U cin $end
$var wire 1 V cout $end
$var wire 1 W s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111 R
b110 L
b101 F
b100 @
b11 :
b10 4
b1 .
b0 (
$end
#0
$dumpvars
0W
0V
0U
0T
0S
0Q
0P
0O
0N
0M
0K
0J
0I
0H
0G
0E
0D
0C
0B
0A
0?
0>
0=
0<
0;
09
08
07
06
05
13
02
11
00
0/
0-
1,
0+
1*
1)
b10 '
b10 &
b1 %
b1 $
b1 #
b1 "
b10 !
$end
#10
b0 !
b0 &
03
01
b0 '
0,
0*
0)
b0 #
b0 %
b0 "
b0 $
#20
19
17
12
1?
11
1=
1,
b1110 '
18
b1100 !
b1100 &
03
1*
10
16
1)
15
b111 #
b111 %
b101 "
b101 $
#30
1Q
1O
1J
09
07
1I
02
1D
13
1W
01
1U
1C
0,
1P
0?
b11111000 '
1>
0E
1-
b11000011 !
b11000011 &
0K
1<
1B
1N
0)
1G
1M
b1011111 #
b1011111 %
b1100100 "
b1100100 $
#40
0Q
0=
0O
0I
08
0J
1E
0D
0W
b110010000 '
1V
0?
b100010011 !
b100010011 &
0K
0*
00
06
0B
1T
1)
1/
05
1;
0G
b11001000 #
b11001000 %
b1001011 "
b1001011 $
#50
0E
0C
b110000000 '
0>
19
1?
03
b110001101 !
b110001101 &
1W
16
0<
0/
1S
b11000100 #
b11000100 %
b11001001 "
b11001001 $
#60
